plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.asciidoctor.jvm.convert" version "3.3.2" //REST Docs
}

group = 'com.mysns'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt //REST Docs
}

repositories {
	mavenCentral()
}

ext {
	//REST Docs
	asciidocVersion = "3.0.0"
	snippetsDir = file('build/generated-snippets')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//QueryDSL
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
//	implementation 'com.querydsl:querydsl-core'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//REST Docs
	asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor:${asciidocVersion}"
	testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:${asciidocVersion}"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

//QueryDSL
def generatedJavaSrcDir = 'src/main/generated'
def queryDslOutput = file(generatedJavaSrcDir)

clean {
	delete queryDslOutput //QueryDSL: clean task 실행 시 generatedJavaSrcDir의 QClass 삭제
}

test {
	outputs.dir snippetsDir //REST Docs
}

//REST Docs
asciidoctor {
	configurations 'asciidoctorExt'
	baseDirFollowsSourceDir()
	inputs.dir snippetsDir
	dependsOn test
}

asciidoctor.doFirst {
	delete file('src/main/resources/static/docs')
}

//REST Docs
bootJar {
	dependsOn asciidoctor
	copy {
		from asciidoctor.outputDir
		into 'src/main/resources/static/docs'
	}
//	from ("${asciidoctor.outputDir}/html5") {
//		into 'static/docs'
//	}
}
